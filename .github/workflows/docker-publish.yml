name: Docker

on:
  schedule:
    - cron: '38 15 * * *' # Scheduled build at 3:38 PM UTC daily
  push:
    branches: [ "main" ] # Trigger on push to the 'main' branch
    tags: [ 'v*.*.*' ]    # Trigger on semver tags that start with 'v'
  pull_request:
    branches: [ "main" ] # Trigger on pull requests to the 'main' branch

env:
  REGISTRY: ghcr.io       # Docker registry to use
  IMAGE_NAME: ${{ github.repository }} # Docker image name based on the GitHub repository name

jobs:
  build:
    runs-on: ubuntu-latest

    # Define permissions for this job
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3 # Checkout the code from the repository

      - name: Install cosign
        if: github.event_name != 'pull_request' # Install cosign only for non-pull request events
        uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06 # Use cosign version 2.1.1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # Set up Docker Buildx version 3.0.0

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request' # Log in to Docker registry only for non-pull request events
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # Log in using Docker credentials
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

      # Build and push Docker image for Mac ARM architecture
      - name: Build and push Docker image for Mac ARM
        if: github.event_name != 'pull_request'
        env:
          DOCKER_PLATFORMS: linux/arm64
        run: |
          docker buildx create --use
          docker buildx build --push --platform $DOCKER_PLATFORMS -t ghcr.io/gangster/rails-build:main .